# Security Credentials Patterns
# Public Domain Pattern Library for Detecting Security Credentials and Secrets
version: "1.0"
framework: "Security-Credentials"
jurisdiction: "Global"
description: "Patterns for detecting security credentials, API keys, tokens, and other secrets"
last_updated: "2024-01-15"

patterns:
  # API Keys and Tokens
  - id: "sec_generic_api_key"
    name: "Generic API Key"
    category: "api_credentials"
    regex: '\b(?:api[_-]?key|apikey|access[_-]?token|secret[_-]?key|private[_-]?key)["\s:=]+([A-Za-z0-9_.-]{20,})\b'
    confidence: 0.85
    description: "Detects generic API key patterns"
    examples:
      - 'api_key: "sk_live_abcdef123456789"'
      - "access_token=abc123def456ghi789"
      - 'secret_key="priv_1234567890abcdef"'
    replacement: "[API_KEY_REDACTED]"
    enabled: true

  - id: "sec_aws_access_key"
    name: "AWS Access Key"
    category: "cloud_credentials"
    regex: '\bAKIA[0-9A-Z]{16}\b'
    confidence: 0.95
    description: "Detects AWS access key IDs"
    examples:
      - "AKIAIOSFODNN7EXAMPLE"
      - "AKIAI44QH8DHBEXAMPLE"
    replacement: "[AWS_ACCESS_KEY_REDACTED]"
    enabled: true

  - id: "sec_aws_secret_key"
    name: "AWS Secret Access Key"
    category: "cloud_credentials"
    regex: '\b[A-Za-z0-9/+=]{40}\b'
    confidence: 0.8
    description: "Detects AWS secret access keys"
    examples:
      - "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    replacement: "[AWS_SECRET_KEY_REDACTED]"
    enabled: true

  - id: "sec_github_token"
    name: "GitHub Token"
    category: "vcs_credentials"
    regex: '\bgh[pousr]_[A-Za-z0-9_]{36,255}\b'
    confidence: 0.9
    description: "Detects GitHub personal access tokens"
    examples:
      - "ghp_1234567890abcdef1234567890abcdef12345678"
      - "gho_1234567890abcdef1234567890abcdef12345678"
    replacement: "[GITHUB_TOKEN_REDACTED]"
    enabled: true

  - id: "sec_slack_token"
    name: "Slack Token"
    category: "api_credentials"
    regex: '\bxox[baprs]-([0-9a-zA-Z]{10,48})\b'
    confidence: 0.9
    description: "Detects Slack API tokens"
    examples:
      - "xoxb-1234567890-1234567890123-abcdefghijklmnopqrstuvwx"
      - "xoxp-1234567890-1234567890-1234567890-abcdef"
    replacement: "[SLACK_TOKEN_REDACTED]"
    enabled: true

  - id: "sec_stripe_key"
    name: "Stripe API Key"
    category: "payment_credentials"
    regex: '\b(?:sk|pk)_(?:live|test)_[0-9a-zA-Z]{24,}\b'
    confidence: 0.9
    description: "Detects Stripe API keys"
    examples:
      - "sk_live_1234567890abcdef1234567890abcdef"
      - "pk_test_abcdef1234567890abcdef1234567890"
    replacement: "[STRIPE_KEY_REDACTED]"
    enabled: true

  - id: "sec_google_api_key"
    name: "Google API Key"
    category: "cloud_credentials"
    regex: '\bAIza[0-9A-Za-z_-]{35}\b'
    confidence: 0.9
    description: "Detects Google API keys"
    examples:
      - "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
    replacement: "[GOOGLE_API_KEY_REDACTED]"
    enabled: true

  - id: "sec_azure_key"
    name: "Azure Subscription Key"
    category: "cloud_credentials"
    regex: '\b[0-9a-f]{32}\b'
    confidence: 0.7
    description: "Detects Azure subscription keys (32 hex characters)"
    examples:
      - "abcdef1234567890abcdef1234567890"
    replacement: "[AZURE_KEY_REDACTED]"
    enabled: true

  # Database Connection Strings
  - id: "sec_db_connection_string"
    name: "Database Connection String"
    category: "database_credentials"
    regex: '\b(?:mongodb|mysql|postgresql|postgres|mssql|oracle)://[^\s;]+:[^\s;]+@[^\s;]+\b'
    confidence: 0.9
    description: "Detects database connection strings with credentials"
    examples:
      - "mongodb://user:password@localhost:27017/database"
      - "postgresql://username:password@localhost/dbname"
    replacement: "[DB_CONNECTION_REDACTED]"
    enabled: true

  - id: "sec_jdbc_url"
    name: "JDBC Connection URL"
    category: "database_credentials"
    regex: '\bjdbc:[a-zA-Z0-9]+://[^\s;]+\b'
    confidence: 0.8
    description: "Detects JDBC connection URLs"
    examples:
      - "jdbc:mysql://localhost:3306/database?user=username&password=password"
      - "jdbc:postgresql://localhost/database"
    replacement: "[JDBC_URL_REDACTED]"
    enabled: true

  # JWT Tokens
  - id: "sec_jwt_token"
    name: "JWT Token"
    category: "auth_tokens"
    regex: '\beyJ[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*\b'
    confidence: 0.9
    description: "Detects JSON Web Tokens (JWT)"
    examples:
      - "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    replacement: "[JWT_TOKEN_REDACTED]"
    enabled: true

  # SSH Keys
  - id: "sec_ssh_private_key"
    name: "SSH Private Key"
    category: "ssh_credentials"
    regex: '\b-----BEGIN (?:RSA |DSA |EC |OPENSSH )?PRIVATE KEY-----[\s\S]*?-----END (?:RSA |DSA |EC |OPENSSH )?PRIVATE KEY-----\b'
    confidence: 0.95
    description: "Detects SSH private keys"
    examples:
      - "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA...\n-----END RSA PRIVATE KEY-----"
    replacement: "[SSH_PRIVATE_KEY_REDACTED]"
    enabled: true

  - id: "sec_ssh_public_key"
    name: "SSH Public Key"
    category: "ssh_credentials"
    regex: '\bssh-(?:rsa|dss|ed25519|ecdsa) [A-Za-z0-9+/]+[=]{0,2}(?:\s+[^\s]+)?\b'
    confidence: 0.9
    description: "Detects SSH public keys"
    examples:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7... user@hostname"
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI... user@hostname"
    replacement: "[SSH_PUBLIC_KEY_REDACTED]"
    enabled: true

  # Passwords and Secrets
  - id: "sec_password_field"
    name: "Password Field"
    category: "passwords"
    regex: '\b(?:password|passwd|pwd|secret)["\s:=]+([^\s"\']{8,})\b'
    confidence: 0.8
    description: "Detects password field assignments"
    examples:
      - 'password: "mySecretPassword123"'
      - "passwd=strongPassword456"
      - 'secret="topSecretValue789"'
    replacement: "[PASSWORD_REDACTED]"
    enabled: true

  # Generic Secrets
  - id: "sec_bearer_token"
    name: "Bearer Token"
    category: "auth_tokens"
    regex: '\bBearer\s+([A-Za-z0-9_.-]{20,})\b'
    confidence: 0.85
    description: "Detects Bearer tokens in Authorization headers"
    examples:
      - "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      - "Bearer abc123def456ghi789jkl012mno345pqr678"
    replacement: "[BEARER_TOKEN_REDACTED]"
    enabled: true

  - id: "sec_basic_auth"
    name: "Basic Authentication"
    category: "auth_tokens"
    regex: '\bBasic\s+([A-Za-z0-9+/]{20,}={0,2})\b'
    confidence: 0.9
    description: "Detects Basic authentication credentials"
    examples:
      - "Basic dXNlcm5hbWU6cGFzc3dvcmQ="
    replacement: "[BASIC_AUTH_REDACTED]"
    enabled: true

  # Certificate Information
  - id: "sec_certificate"
    name: "X.509 Certificate"
    category: "certificates"
    regex: '\b-----BEGIN CERTIFICATE-----[\s\S]*?-----END CERTIFICATE-----\b'
    confidence: 0.95
    description: "Detects X.509 certificates"
    examples:
      - "-----BEGIN CERTIFICATE-----\nMIIDXTCCAkWgAwIBAgI...\n-----END CERTIFICATE-----"
    replacement: "[CERTIFICATE_REDACTED]"
    enabled: true

  # Webhook URLs
  - id: "sec_webhook_url"
    name: "Webhook URL"
    category: "webhooks"
    regex: '\bhttps://hooks\.[a-zA-Z0-9.-]+/[A-Za-z0-9/_-]+\b'
    confidence: 0.8
    description: "Detects webhook URLs that may contain secrets"
    examples:
      - "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"
      - "https://hooks.zapier.com/hooks/catch/123456/abcdef/"
    replacement: "[WEBHOOK_URL_REDACTED]"
    enabled: true

metadata:
  compliance_frameworks:
    - "SOC2"
    - "ISO27001"
    - "NIST"
    - "Security Best Practices"
  categories:
    - "api_credentials"
    - "cloud_credentials"
    - "vcs_credentials"
    - "payment_credentials"
    - "database_credentials"
    - "auth_tokens"
    - "ssh_credentials"
    - "passwords"
    - "certificates"
    - "webhooks"
  risk_levels:
    critical: ["sec_aws_secret_key", "sec_ssh_private_key", "sec_password_field", "sec_db_connection_string"]
    high: ["sec_aws_access_key", "sec_github_token", "sec_stripe_key", "sec_jwt_token", "sec_basic_auth"]
    medium: ["sec_generic_api_key", "sec_slack_token", "sec_google_api_key", "sec_bearer_token", "sec_webhook_url"]
    low: ["sec_ssh_public_key", "sec_certificate"]
  validation:
    pattern_count: 17
    categories_covered: 10
    compliance_score: 0.97
